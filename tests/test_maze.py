from sgtpyutils.maze import *

g_map
g_map = bytes.fromhex(g_map)
g_map = [str(x) for x in g_map]

def test_single_resolve():
    maze = Maze(
        map_data=g_map,
        map_sizex=32,
        start=Pos(0, 0),
        end='3',
        directions=None,
        avoid=['0'],
        allow=None
    )
    data = maze.explore()
    result = maze.dump()
    assert result == ['dddsddssddddsdsssddwwdddddwwddwdddddsssddsddssddssssaawaaawaaassaaassassaaaawwawwwdwwaasasasssasasaaaasssaasassddddwdddssasaaaaassssddssddwddddsdddwwawwwwddwwwdddwwwdddddddddsdddsssdssssdsssaassdd']


def test_multi_resolve():
    maze = Maze(
        map_data=g_map,
        map_sizex=32,
        start=Pos(0, 0),
        end='3',
        directions=None,
        avoid=['0'],
        allow=None,
        max_result_count=10
    )
    data = maze.explore()
    result = maze.dump()
    assert len(result) == 10


def test_custom_item():
    maze = Maze(
        map_data='*11110100001010000101111#',
        map_sizex=5,
        start=Pos(0, 0),
        end='#',
        directions=None,
        avoid=['1'],
        allow=None,
        max_result_count=10
    )
    maze.print_map(convert={'0': ' '})
    data = maze.explore()
    result = maze.dump()
    assert result == ['sssddwwddsss']


def test_direction_convert():
    maze = Maze(
        map_data='*11110100001010000101111#',
        map_sizex=5,
        start=Pos(0, 0),
        end='#',
        directions=None,
        avoid=['1'],
        allow=None,
        direction_char_convert={
            'w': 1, 's': 2, 'a': 3, 'd': 4
        }
    )
    maze.print_map(convert={'0': ' '})
    data = maze.explore()
    result = maze.dump()
    assert result == ['222441144222']


def test_start_pos_use_char():
    maze = Maze(
        map_data='*11110100001010000101111#',
        map_sizex=5,
        start='*',
        end='#',
        directions=None,
        avoid=['1'],
        allow=None
    )
    maze.print_map(convert={'0': ' '})
    data = maze.explore()
    result = maze.dump()
    assert result == ['sssddwwddsss']


def test_end_pos_use_pos():
    maze = Maze(
        map_data='*11110100001010000101111#',
        map_sizex=5,
        start='*',
        end=Pos(4, 4),
        directions=None,
        avoid=['1'],
        allow=None
    )
    maze.print_map(convert={'0': ' '})
    data = maze.explore()
    result = maze.dump()
    assert result == ['sssddwwddsss']

